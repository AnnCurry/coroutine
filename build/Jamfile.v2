
#          Copyright Oliver Kowalke 2009.
# Distributed under the Boost Software License, Version 1.0.
#    (See accompanying file LICENSE_1_0.txt or copy at
#          http://www.boost.org/LICENSE_1_0.txt)

import feature ;
import modules ;
import toolset ;

feature.feature segmented-stacks : on : optional propagated composite ;
feature.compose <segmented-stacks>on : <define>BOOST_USE_SEGMENTED_STACKS ;

project boost/coroutine
    : requirements
      <library>/boost/context//boost_context
      <library>/boost/system//boost_system
      <library>/boost/thread//boost_thread
      <toolset>gcc-4.7,<segmented-stacks>on:<cxxflags>-fsplit-stack
      <toolset>gcc-4.7,<segmented-stacks>on:<linkflags>"-static-libgcc"
      <toolset>gcc-4.8,<segmented-stacks>on:<cxxflags>-fsplit-stack
      <toolset>gcc-4.8,<segmented-stacks>on:<linkflags>"-static-libgcc"
      <link>shared:<define>BOOST_COROUTINES_DYN_LINK=1
      <define>BOOST_COROUTINES_SOURCE
    : usage-requirements
      <link>shared:<define>BOOST_COROUTINES_DYN_LINK=1
    : source-location ../src
    ;

alias protected_allocator_sources
    : protected_stack_allocator_windows.cpp
    : <target-os>windows
    ;

alias protected_allocator_sources
    : protected_stack_allocator_posix.cpp
    ;

explicit protected_allocator_sources ;

alias segmented_allocator_sources
    : segmented_stack_allocator.cpp
    : <segmented-stacks>on
    ;

alias segmented_allocator_sources
    ;

explicit segmented_allocator_sources ;

lib boost_coroutine
    : detail/coroutine_context.cpp
      exceptions.cpp
      protected_allocator_sources
      segmented_allocator_sources
      standard_stack_allocator.cpp
    : <link>shared:<library>../../context/build//boost_context
      <link>shared:<library>../../system/build//boost_system
      <link>shared:<library>../../thread/build//boost_thread
    ;

boost-install boost_coroutine ;
